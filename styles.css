document.addEventListener('DOMContentLoaded', () => {
    // ... আপনার আগের কোড ...

    const fileInput = document.getElementById('file-input');
    const attachBtn = document.getElementById('attach-btn');

    attachBtn?.addEventListener('click', () => {
        fileInput?.click();
    });

    fileInput?.addEventListener('change', () => {
        const file = fileInput.files[0];
        if (!file) return;

        const reader = new FileReader();
        reader.onload = function (e) {
            const user = auth.currentUser;
            const mediaMessage = {
                text: '', // No text for file-only
                name: user.displayName,
                userId: user.uid,
                photoURL: user.photoURL,
                timestamp: Date.now(),
                mediaURL: e.target.result,
                mediaType: file.type.startsWith('video') ? 'video' : 'image'
            };

            push(messagesRef, mediaMessage)
                .then(() => {
                    fileInput.value = '';
                })
                .catch((error) => {
                    console.error('Error sending file message:', error);
                    alert('Failed to send file. Try again.');
                });
        };
        reader.readAsDataURL(file);
    });

    function displayMessage(message) {
        const currentUser = auth.currentUser;
        const isOwnMessage = message.userId === currentUser?.uid;

        const messageElement = document.createElement('div');
        messageElement.className = `message ${isOwnMessage ? 'own-message' : ''}`;

        if (!isOwnMessage && notificationSound) {
            notificationSound.currentTime = 0;
            notificationSound.play().catch(e => console.log('Sound play failed:', e));
        }

        const headerHTML = `
            <span class="message-sender">${formatName(message.name)}</span>
            <span class="message-time">${formatTime(message.timestamp)}</span>
        `;

        let mediaHTML = '';
        if (message.mediaURL) {
            if (message.mediaType === 'image') {
                mediaHTML = `<img class="message-media" src="${message.mediaURL}" alt="Image">`;
            } else if (message.mediaType === 'video') {
                mediaHTML = `<video class="message-media" controls src="${message.mediaURL}"></video>`;
            }
        }

        messageElement.innerHTML = `
            <img class="message-avatar" src="${message.photoURL}" alt="${message.name}">
            <div class="message-content">
                <div class="message-header">${headerHTML}</div>
                <div class="message-text">${escapeHTML(message.text)}</div>
                ${mediaHTML}
            </div>
        `;

        messagesContainer.appendChild(messageElement);

        const isNearBottom = messagesContainer.scrollHeight - messagesContainer.scrollTop - messagesContainer.clientHeight < 100;
        if (isNearBottom) {
            messagesContainer.scrollTop = messagesContainer.scrollHeight;
        }
    }

    // ... আপনার আগের formatTime, escapeHTML, formatName ফাংশন গুলো ঠিকই থাকবে ...
});
